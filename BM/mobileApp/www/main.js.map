{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/event.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/korisnik/korisnik.component.css","webpack:///./src/app/korisnik/korisnik.component.html","webpack:///./src/app/korisnik/korisnik.component.ts","webpack:///./src/app/korisnik2/korisnik2.component.css","webpack:///./src/app/korisnik2/korisnik2.component.html","webpack:///./src/app/korisnik2/korisnik2.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/normal-e/normal-e.component.css","webpack:///./src/app/normal-e/normal-e.component.html","webpack:///./src/app/normal-e/normal-e.component.ts","webpack:///./src/app/posts_manager_service/posts-manager.service.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/sadrzaj-korisnika/sadrzaj-korisnika.component.css","webpack:///./src/app/sadrzaj-korisnika/sadrzaj-korisnika.component.html","webpack:///./src/app/sadrzaj-korisnika/sadrzaj-korisnika.component.ts","webpack:///./src/app/server-configuration.service.ts","webpack:///./src/app/token-interceptor.service.ts","webpack:///./src/app/vest/vest.component.css","webpack:///./src/app/vest/vest.component.html","webpack:///./src/app/vest/vest.component.ts","webpack:///./src/app/zavod/zavod.component.css","webpack:///./src/app/zavod/zavod.component.html","webpack:///./src/app/zavod/zavod.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {VestComponent} from \"./vest/vest.component\";\nimport {KorisnikComponent} from \"./korisnik/korisnik.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {Korisnik2Component} from \"./korisnik2/korisnik2.component\";\nimport {ZavodComponent} from \"./zavod/zavod.component\";\n\nconst routes: Routes = [\n  {\n\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'izborZavoda',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'informacije',\n    redirectTo:'/home',\n    pathMatch:'full'\n  },\n  {\n    path: 'home',\n    component: ZavodComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'show_posts',\n    component: VestComponent\n  },\n  {\n    path: 'profil',\n    component: Korisnik2Component\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"margin-bottom: 50px\\\">\\n    <!-- <nav class=\\\"navbar navbar\\\" style=\\\"margin: 0px\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n          aria-expanded=\\\"false\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">BloodMaster2000</a>\\n      </div>\\n\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li class=\\\"active\\\">\\n            <a routerLink=\\\"/home\\\">Home\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </a>\\n          </li>\\n          <li class=\\\"active\\\">\\n            <a routerLink=\\\"/show_posts\\\">Vesti\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </a>\\n          </li>\\n        </ul>\\n        <form class=\\\"navbar-form navbar-left\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Trazi</button>\\n        </form>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n\\n          <ul class=\\\"nav navbar-nav\\\">\\n            <li class=\\\"active\\\">\\n              <a *ngIf=\\\"_authService.getUserType()=='zaposleni'\\\" routerLink=\\\"/login\\\">Nalozi\\n                <span class=\\\"sr-only\\\">(current)</span>\\n              </a>\\n            </li>\\n            <li class=\\\"active\\\">\\n              <a *ngIf=\\\"_authService.getUserType()=='zaposleni'\\\" routerLink=\\\"/show_posts\\\">Postovi\\n                <span class=\\\"sr-only\\\">(current)</span>\\n              </a>\\n            </li>\\n          </ul>\\n\\n          <li>\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/profil\\\" routerLinkActive=\\\"active\\\">Profil</a>\\n          </li>\\n\\n          <li>\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n              <span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</a>\\n          </li>\\n          <li>\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\n          </li>\\n          <li>\\n            <a style=\\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" class=\\\"nav-link\\\" (click)=\\\"_authService.logoutUser()\\\">\\n              <span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </nav> -->\\n\\n\\n\\n    <nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"navbar-header\\\">\\n                <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n                  aria-expanded=\\\"false\\\">\\n                  <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                  <span class=\\\"icon-bar\\\"></span>\\n                  <span class=\\\"icon-bar\\\"></span>\\n                  <span class=\\\"icon-bar\\\"></span>\\n                </button>\\n                <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">BloodMaster2000</a>\\n              </div>\\n\\n              <!-- Collect the nav links, forms, and other content for toggling -->\\n              <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n                <ul class=\\\"nav navbar-nav\\\">\\n                  <li class=\\\"active\\\">\\n                    <a routerLink=\\\"/home\\\">Home\\n                      <span class=\\\"sr-only\\\">(current)</span>\\n                    </a>\\n                  </li>\\n                  <li class=\\\"active\\\">\\n                    <a routerLink=\\\"/show_posts\\\">Vesti\\n                      <span class=\\\"sr-only\\\">(current)</span>\\n                    </a>\\n                  </li>\\n                </ul>\\n                <form class=\\\"navbar-form navbar-left\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n                  </div>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Trazi</button>\\n                </form>\\n                <ul class=\\\"nav navbar-nav navbar-right\\\">\\n\\n                  <!-- Upravljanje nalozima i upravljanje obavestenjima -->\\n                  <ul class=\\\"nav navbar-nav\\\">\\n                    <li class=\\\"active\\\">\\n                      <a *ngIf=\\\"_authService.getUserType()=='zaposleni'\\\" routerLink=\\\"/login\\\">Nalozi\\n                        <span class=\\\"sr-only\\\">(current)</span>\\n                      </a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                      <a *ngIf=\\\"_authService.getUserType()=='zaposleni'\\\" routerLink=\\\"/show_posts\\\">Postovi\\n                        <span class=\\\"sr-only\\\">(current)</span>\\n                      </a>\\n                    </li>\\n                  </ul>\\n\\n                  <li>\\n                    <a class=\\\"nav-link\\\" *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/profil\\\" routerLinkActive=\\\"active\\\">Profil</a>\\n                  </li>\\n\\n                  <li>\\n                    <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n                      <span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</a>\\n                  </li>\\n                  <li>\\n                    <a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\n                  </li>\\n                  <li>\\n                    <a style=\\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" class=\\\"nav-link\\\" (click)=\\\"_authService.logoutUser()\\\">\\n                      <span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a>\\n                  </li>\\n                </ul>\\n              </div>\\n        </div>\\n      </nav>\\n  </div>\\n\\n  <div>\\n    <!--<app-zavod></app-zavod>-->\\n     <router-outlet></router-outlet>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { ServerConfigurationService } from './server-configuration.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements  OnInit{\n  private ROOT_URL = '';\n\n  title = 'app';\n\n  constructor(\n    private http: HttpClient,\n    private _authService: AuthService,\n    private _serverConfig: ServerConfigurationService\n  ) {\n    this.ROOT_URL = this._serverConfig.getFullServerAddress();\n  }\n\n  ngOnInit(): void {\n    document.addEventListener(\n      'backbutton',\n      function () {\n        alert('el si morao ');\n      },\n      false\n    );\n\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {NormalEComponent} from './normal-e/normal-e.component';\nimport {AuthService} from './auth.service';\nimport {EventService} from './event.service';\nimport {AuthGuard} from './auth.guard';\nimport {TokenInterceptorService} from './token-interceptor.service';\nimport {VestComponent} from './vest/vest.component';\nimport {KorisnikComponent} from './korisnik/korisnik.component';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {ZavodComponent} from './zavod/zavod.component';\nimport {HomeComponent} from './home/home.component';\nimport {Korisnik2Component} from \"./korisnik2/korisnik2.component\";\nimport { SadrzajKorisnikaComponent } from './sadrzaj-korisnika/sadrzaj-korisnika.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    NormalEComponent,\n    VestComponent,\n    KorisnikComponent,\n    NavbarComponent,\n    HomeComponent,\n    Korisnik2Component,\n    ZavodComponent,\n    HomeComponent,\n    VestComponent,\n    SadrzajKorisnikaComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [AuthService, AuthGuard, EventService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n//import { Observable } from 'rxjs';\n\n// ovi iznad su bili isti samo u jednom bila prazna linija ispod auth service\n\n@Injectable(// {\n  // providedIn: 'root'\n// }\n)\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _authService: AuthService, private _router: Router) {\n\n  }\n  canActivate(): boolean {\n    if (this._authService.loggedIn()) {\n      return true;\n    } else {\n      this._router.navigate(['/login']);\n      return false;\n    }\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {ServerConfigurationService} from './server-configuration.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _registerUrl = '';\n  private _loginUrl = '';\n\n  constructor(private http: HttpClient, private _router: Router, private _serverConfig: ServerConfigurationService) {\n    this._registerUrl = this._serverConfig.getRegisterUrl();\n    this._loginUrl = this._serverConfig.getLoginUrl();\n  }\n\n  registerUser(user) {\n    return this.http.post<any>(this._registerUrl, user);\n  }\n\n  loginUser(user) {\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token'); // dva puta negira\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  logoutUser() {\n    localStorage.removeItem('token');\n    localStorage.removeItem(\"loggedUserData\");\n    localStorage.removeItem(\"userType\");\n    this._router.navigate(['/home']);\n  }\n\n  getUserType() {\n    return localStorage.getItem(\"userType\");\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ServerConfigurationService} from './server-configuration.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EventService {\n\n  private _eventsNormalUrl = '';\n  private _eventsSpecialUrl = '';\n\n  constructor(private http: HttpClient, private _serverConfig: ServerConfigurationService) {\n    this._eventsNormalUrl = this._serverConfig.getEventsNormalUrl();\n    this._eventsSpecialUrl = this._serverConfig.getEventsSpecialUrl();\n  }\n\n  getNormalEvents() {\n    return this.http.get<any>(this._eventsNormalUrl);\n  }\n\n  getSpecialEvents() {\n    return this.http.get<any>(this._eventsSpecialUrl);\n  }\n\n  public getEventsNormalUrl() {\n    return this._eventsNormalUrl;\n  }\n\n}\n","module.exports = \".btn-group {\\n    width:  100%;\\n    height: inherit;\\n}\\nbutton {\\n    width:  30%;\\n    height: inherit;\\n    margin: 3.333333%;\\n}\\n@media (max-width: 600px) {\\n    [class*=\\\"btn-\\\"] {\\n        width: 100%;\\n        margin: 10px;\\n        box-sizing: border-box;\\n        padding: 0;\\n    }   \\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"col-xl-4 col-offset-8 centered\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"height: 30vh\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" routerLink=\\\"/izborZavoda\\\" style=\\\"border-radius: 20%\\\">Zavod</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" routerLink=\\\"/profil\\\" (click)=\\\"clickOnKorisnikHandler()\\\" style=\\\"border-radius: 20%\\\">Korisnik</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" style=\\\"border-radius: 20%\\\">Informacije</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public clickOnKorisnikHandler(){\n    console.log(\"storing /profil as root\");\n    localStorage.setItem(\"redirectingPath\",\"/profil\");\n  }\n\n}\n","module.exports = \"/* The sidebar menu */\\n\\n/* On smaller screens, where height is less than 450px, change the style of the sidebar (less padding and a smaller font size) */\\n\\n@media screen and (max-height: 450px) {\\n    .sidenav {padding-top: 15px;}\\n    .sidenav a {font-size: 18px;}\\n}\\n\\nul {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n    background-color: #f1f1f1;\\n}\\n\\nli a {\\n    display: block;\\n    color: #000;\\n    padding: 8px 16px;\\n    text-decoration: none;\\n}\\n\\n/* Change the link color on hover */\\n\\nli a:hover {\\n    background-color: #555;\\n    color: white;\\n}\"","module.exports = \"<!--\\n<div id=\\\"mySidenav\\\" class=\\\"sidenav\\\">\\n    <a href=\\\"#\\\">About</a>\\n    <a href=\\\"#\\\">Services</a>\\n    <a href=\\\"#\\\">Clients</a>\\n    <a href=\\\"#\\\">Contact</a>\\n</div> -->\\n\\n<!-- Add all page content inside this div if you want the side nav to push page content to the right (not used if you only want the sidenav to sit on top of the page -->\\n\\n<div class=\\\"container-fluid\\\">\\n\\n  <div class=\\\"row row-offcanvas row-offcanvas-left\\\">\\n\\n    <div class=\\\"col-xs-6 col-sm-3 sidebar-offcanvas\\\" id=\\\"sidebar\\\" role=\\\"navigation\\\" style=\\\"margin: 0px; padding: 0px;\\\">\\n      <div class=\\\"sidebar-nav\\\">\\n        <ul class=\\\"nav\\\" style=\\\"background-color: lightgray; height: 100vh; width: 172.25px\\\">\\n          <li class=\\\"active\\\"><a href=\\\"#\\\">Link</a></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n          <li class=\\\"nav-divider\\\"></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n          <li class=\\\"nav-divider\\\"></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n        </ul>\\n      </div>\\n      <!--/.well -->\\n    </div>\\n    <!--/span-->\\n\\n    <div>\\n      <ul>\\n        <li><h2>{{user.ime}}</h2></li>\\n        <li><h2>{{user.prezime}}</h2></li>\\n        <li><h2>{{user.email}}</h2></li>\\n        <li><h2>{{user.krvnaGrupa}}</h2></li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!--/row-->\\n  <hr>\\n</div>\\n<!--/.container-->\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../auth.service\";\n\n@Component({\n  selector: 'app-korisnik',\n  templateUrl: './korisnik.component.html',\n  styleUrls: ['./korisnik.component.css']\n})\n\nexport class KorisnikComponent implements OnInit {\n\n  private user = {};\n\n  constructor(private _authService: AuthService, private _router: Router) {\n  }\n\n  ngOnInit() {\n\n    if (!this._authService.loggedIn()) {\n      this._router.navigate(['/login']);\n    } else {\n      console.log(localStorage.getItem(\"loggedUserData\"));\n      this.user = JSON.parse(localStorage.getItem(\"loggedUserData\"));\n    }\n  }\n\n}\n","module.exports = \"#sidebar {\\n    margin-left:0px; \\n    padding: 0px;\\n    float: left;\\n    width: 100%;\\n    height: 100%;\\n    background-color: lightgray;\\n}\\n.nav-item {\\n    padding: 0px;\\n    \\n}\\na {\\n  cursor: default;\\n}\\n#wrapper {\\n    padding-left: 173px;\\n    transition: all 0.4s ease 0s;\\n    padding-right: 0px;\\n    margin-right: 0px;\\n    width: inherit - 173px;\\n  }\\n#sidebar-wrapper {\\n    margin-left: -172.5px;\\n    left: 172.5px;\\n    width: 172.5px;\\n    background: #CCC;\\n    position: fixed;\\n    height: 100%;\\n    overflow-y: auto;\\n    z-index: 1000;\\n    transition: all 0.4s ease 0s;\\n  }\\n#page-content-wrapper {\\n    width: 100%;\\n  }\\n@media (max-width:400) {\\n  \\n      #wrapper {\\n        padding-left: 0;\\n      }\\n  \\n      #sidebar-wrapper {\\n        left: 0;\\n      }\\n  \\n      #wrapper.active {\\n        position: relative;\\n        left: 250px;\\n      }\\n  \\n      #wrapper.active #sidebar-wrapper {\\n        left: 250px;\\n        width: 250px;\\n        transition: all 0.4s ease 0s;\\n      }\\n  \\n  }\\n\\n\"","module.exports = \"<!-- <div class=\\\"container-fluid\\\">\\n  <div class = \\\"col-xs-6 col-lg-8 sidebar\\\" id=\\\"sidebar\\\" role=\\\"navigation\\\">\\n    <ul class=\\\"nav nav-tabs|pills\\\" id=\\\"navId\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\">Ime</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\">Prezime</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\">Email</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\">Krvna grupa</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\">Broj davanja</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\">Datum poslednjeg davanja</a>\\n      </li>\\n      <hr>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</div> -->\\n\\n<div id=\\\"wrapper\\\">\\n  <div id=\\\"sidebar-wrapper\\\">\\n    <div class=\\\"col-xl-4 col-lg-8 sidebar\\\" id=\\\"sidebar\\\" role=\\\"navigation\\\">\\n      <ul class=\\\"nav nav-tabs|pills\\\" id=\\\"navId\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\">Ime</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\">Prezime</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\">Email</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\">Krvna grupa</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\">Broj davanja</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\">Datum poslednjeg davanja</a>\\n        </li>\\n        <hr>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabSaPracenimNovostima\\\"\\n          (click)=\\\"saveClickHistory($event)\\\">Novosti</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabSaProcitanimObavestenjima\\\"\\n          (click)=\\\"saveClickHistory($event)\\\">Procitana obavestenja</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabSaNeprocitanimObavestenjima\\\"\\n          (click)=\\\"saveClickHistory($event)\\\">Neprocitana obavestenja</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabIstorijeDavanja\\\"\\n          (click)=\\\"saveClickHistory($event)\\\">Istorija davanja</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabIstorijePrisustvaDogadjajima\\\"\\n          (click)=\\\"saveClickHistory($event)\\\">Moji dogadjaji</a>\\n        </li>\\n        <hr>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link active\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <div id=\\\"page-content-wrapper\\\">\\n    <div class=\\\"page-content\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <div class=\\\"collapse multi-collapse\\\" id=\\\"tabSaPracenimNovostima\\\">\\n                  <div class=\\\"card card-body\\\">\\n        \\n                    <div class=\\\"col-lg-8 mx-auto\\\" *ngFor=\\\"let _novost of _novosti\\\">\\n                      <h2 class=\\\"card-title\\\">{{_novost.naslov}}</h2>\\n                      <p class=\\\"card-text\\\">{{_novost.sadrzaj}}</p>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Procitaj jos</a>\\n                    </div>\\n        \\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <div class=\\\"collapse multi-collapse\\\" id=\\\"tabSaProcitanimObavestenjima\\\">\\n                  <div class=\\\"card card-body\\\">\\n        \\n                    <div class=\\\"col-lg-8 mx-auto\\\" *ngFor=\\\"let _obavestenje of _obavestenja.procitana\\\">\\n                      <h2 class=\\\"card-title\\\">{{_obavestenje.naslov}}</h2>\\n                      <p class=\\\"card-text\\\">{{_obavestenje.sadrzaj}}</p>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Procitaj jos</a>\\n                    </div>\\n        \\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <div class=\\\"collapse multi-collapse\\\" id=\\\"tabSaNeprocitanimObavestenjima\\\">\\n                  <div class=\\\"card card-body\\\">\\n        \\n                    <div class=\\\"col-lg-8 mx-auto\\\" *ngFor=\\\"let _obavestenje of _obavestenja.neprocitana\\\">\\n                      <h2 class=\\\"card-title\\\">{{_obavestenje.naslov}}</h2>\\n                      <p class=\\\"card-text\\\">{{_obavestenje.sadrzaj}}</p>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Procitaj jos</a>\\n                    </div>\\n        \\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <div class=\\\"collapse multi-collapse\\\" id=\\\"tabIstorijeDavanja\\\">\\n                  <div class=\\\"card card-body\\\">\\n                    <h3 *ngFor=\\\"let _datum of _user.istorijaDavanja\\\">\\n                      {{_datum}}\\n                    </h3>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <div class=\\\"collapse multi-collapse\\\" id=\\\"tabIstorijePrisustvaDogadjajima\\\">\\n                  <div class=\\\"card card-body\\\">\\n                    istorija prisustvovanja dogadjajima\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n<!-- <div class=\\\"wrapper\\\">\\n\\n    <nav id=\\\"sidebar\\\">\\n\\n        <div class=\\\"sidebar-header\\\">\\n            <h3>Collapsible Sidebar</h3>\\n        </div>\\n\\n\\n        <ul class=\\\"list-unstyled components\\\">\\n            <li class=\\\"active\\\"><a href=\\\"#\\\">Home</a></li>\\n            <li><a href=\\\"#\\\">About</a></li>\\n\\n            <li>\\n                <a href=\\\"#homeSubmenu\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\">Pages</a>\\n                <ul class=\\\"collapse list-unstyled\\\" id=\\\"homeSubmenu\\\">\\n                    <li><a href=\\\"#\\\">Page</a></li>\\n                    <li><a href=\\\"#\\\">Page</a></li>\\n                    <li><a href=\\\"#\\\">Page</a></li>\\n                </ul>\\n\\n            <li><a href=\\\"#\\\">Portfolio</a></li>\\n            <li><a href=\\\"#\\\">Contact</a></li>\\n        </ul>\\n    </nav>\\n\\n</div>\\n\\n<script>\\n  $(document).ready(function () {\\n\\n$('#sidebarCollapse').on('click', function () {\\n    $('#sidebar').toggleClass('active');\\n});\\n\\n});\\n</script> -->\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../auth.service\";\nimport {Router} from \"@angular/router\";\nimport {PostsManagerService} from \"../posts_manager_service/posts-manager.service\";\n\n@Component({\n  selector: 'app-korisnik2',\n  templateUrl: './korisnik2.component.html',\n  styleUrls: ['./korisnik2.component.css']\n})\nexport class Korisnik2Component implements OnInit {\n\n  private _activeTab;\n\n  private _user;\n\n  private _novosti = [];\n\n  private _obavestenja = {\n    procitana: [],\n    neprocitana: []\n  };\n\n  constructor(private _authService: AuthService, private _router: Router, private _postsManager: PostsManagerService) {\n\n  }\n\n  ngOnInit() {\n\n    let _this = this;\n\n    if (!this._authService.loggedIn()) {\n      this._router.navigate(['/login']);\n    } else {\n\n      this._user = JSON.parse(localStorage.getItem(\"loggedUserData\"));\n\n      this._novosti = JSON.parse(localStorage.getItem(\"_pracene_novosti\"));\n      // ukoliko podaci jos nisu pribavljeni (prvi put posecuje stranicu profil)\n      if (this._novosti == null) {\n        this._postsManager.getUserContent_Novosti(this._user._id).subscribe(\n          function (data) {\n            _this._novosti = data;\n          },\n          function (err) {\n            console.log(\"ERROR\");\n            console.log(err);\n          }\n        );\n\n        // save novosti to local storage\n        this._postsManager.savePraceneNovostiToLocalStorage(this._novosti);\n\n      }\n\n      this._obavestenja = JSON.parse(localStorage.getItem(\"_obavestenja\"));\n      // ukoliko podaci jos nisu pribavljeni (prvi put posecuje stranicu profil)\n      if (this._novosti == null) {\n        this._postsManager.getUserContent_Obavestenja(this._user._id).subscribe(\n          function (data) {\n            _this._obavestenja = data;\n\n          },\n          function (err) {\n            console.log(\"ERROR\");\n            console.log(err);\n          }\n        );\n\n        // save obavestenja to local storage\n        this._postsManager.saveObavestenjaToLocalStorage(this._obavestenja);\n\n      }\n\n    }\n  }\n\n  private saveClickHistory(event) {\n    // ako nije prvi klik klikni na poslednje dugme\n    if (this._activeTab)\n      this._activeTab.click();\n    // zapamti na sta je kliknuto\n    this._activeTab = event.currentTarget;\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"row pt-5\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card rounded-0\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Login</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"form-froup\\\">\\n            <label for=\\\"\\\">Email</label>\\n            <input [(ngModel)]=\\\"loginUserData.email\\\" name=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label   for=\\\"\\\">Password</label>\\n            <input [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control rounded-0\\\" required>\\n\\n          </div>\\n          <button (click)=\\\"loginUser()\\\" type=\\\"button\\\" class=\\\"btn btn-success float-right\\\">Login</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  loginUserData = {};\n\n  constructor(private _auth: AuthService,\n              private _router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  loginUser() {\n    this._auth.loginUser(this.loginUserData).subscribe(\n      res => {\n\n        localStorage.setItem('token', res.token);\n        localStorage.setItem(\"loggedUserData\", JSON.stringify(res.userData));\n        localStorage.setItem(\"userType\", res.userData.tipKorisnika);\n\n        let redirectingPath = localStorage.getItem(\"redirectingPath\");\n        if (redirectingPath == null)\n          redirectingPath = '/';\n        console.log(\"path took from storage: \"+redirectingPath);\n        // clear storage for next routing\n        localStorage.removeItem(\"redirectingPath\");\n\n        this._router.navigate([redirectingPath]);\n      },\n      err => console.log(err)\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <!-- Brand and toggle get grouped for better mobile display -->\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BloodMaster2000</a>\\n      </div>\\n  \\n      <!-- Collect the nav links, forms, and other content for toggling -->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li class=\\\"active\\\"><a href=\\\"#\\\">Link <span class=\\\"sr-only\\\">(current)</span></a></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n        </ul>\\n        <form class=\\\"navbar-form navbar-left\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n        </form>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li><a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a></li>\\n          <li><a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\" >Register</a></li>\\n          <li><a style= \\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" class=\\\"nav-link\\\" (click)=\\\"_authService.logoutUser()\\\">Logout</a></li>\\n        </ul>\\n      </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row mt-5\\\">\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let event of events\\\">\\n    <div class=\\\"card text-center\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{event.name}}</h5>\\n        <p class=\\\"card-text\\\">{{event.price}}</p>\\n        <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Buy Tickets</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {EventService} from '../event.service';\n\n@Component({\n  selector: 'app-normal-e',\n  templateUrl: './normal-e.component.html',\n  styleUrls: ['./normal-e.component.css']\n})\nexport class NormalEComponent implements OnInit {\n\n  events = [];\n\n  constructor(private _eventService: EventService) {\n  }\n\n  ngOnInit() {\n\n    let _this = this;\n\n    this._eventService.getNormalEvents().subscribe(\n      function (res) {\n        _this.events = res;\n      }, function (err) {\n        console.log(\"greska kod normal sa servera\");\n        console.log(err);\n      }\n    );\n\n    localStorage.removeItem(\"currentPosts\");\n    localStorage.setItem(\"lastPostIndex\", String(0));\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ServerConfigurationService} from '../server-configuration.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PostsManagerService {\n\n  private _allPostsUrl;\n  private _nextPartOfPostsUrl;\n  private _userContent_NovostiUrl;\n  private _userContent_ObavestenjaUrl;\n\n  constructor(private _http: HttpClient, private _serverConfig: ServerConfigurationService) {\n    this._allPostsUrl = this._serverConfig.getAllPostsUrl();\n    this._nextPartOfPostsUrl = this._serverConfig.getNextPartOfPostsUrl();\n    this._userContent_ObavestenjaUrl = this._serverConfig.getUserContent_NovostiUrl();\n    this._userContent_NovostiUrl = this._serverConfig.getUserContent_ObavestenjaUrl();\n  }\n\n  public getAllPosts() {\n    return this._http.get<any>(this._allPostsUrl);\n  }\n\n  public getNextPart(_startingIndex: number, _lastIndex: number) {\n    return this._http.post<any>(this._nextPartOfPostsUrl, {firstIndex: _startingIndex, lastIndex: _lastIndex});\n  }\n\n  public savePostsToLocalStorage(newPosts: any[]) {\n    // get posts as string\n    let postsFromStorage = localStorage.getItem(\"currentPosts\");\n\n    // place for posts as array\n    let storedArray;\n\n    if (postsFromStorage != null) {\n      // if posts exists in local storage create array from them\n      storedArray = JSON.parse(postsFromStorage);\n    } else {\n      storedArray = [];\n    }\n\n    // save again all posts\n    localStorage.setItem(\"currentPosts\", JSON.stringify(storedArray.concat(newPosts)));\n\n  }\n\n  public getLastPostIndex(): number {\n    let storedValue = localStorage.getItem(\"lastPostIndex\");\n    if (storedValue != null)\n      return parseInt(storedValue);\n    else\n      return 0;\n  }\n\n  public saveLastPostIndex(index) {\n    localStorage.setItem(\"lastPostIndex\", index);\n  }\n\n  public getUserContent_Novosti(userId) {\n    console.log(\"Sending request for pracene_novosti on: \"+this._userContent_NovostiUrl);\n    return this._http.post<any>(this._userContent_NovostiUrl, {id: userId});\n  }\n\n  public getUserContent_Obavestenja(userId) {\n    console.log(\"Sending request for pracene_obavestenja on: \"+this._userContent_ObavestenjaUrl);\n    return this._http.post<any>(this._userContent_ObavestenjaUrl, {id: userId});\n  }\n\n  public savePraceneNovostiToLocalStorage(novosti: any[]) {\n\n  }\n\n  public saveObavestenjaToLocalStorage(obavestenja: {}) {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row pt-5\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card rounded-0\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Register</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"form-froup\\\">\\n            <label for=\\\"\\\">Email</label>\\n            <input [(ngModel)]=\\\"registerUserData.email\\\" name=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label   for=\\\"\\\">Password</label>\\n            <input [(ngModel)]=\\\"registerUserData.password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control rounded-0\\\" required>\\n\\n          </div>\\n          <button (click)=\\\"registerUser()\\\" type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\">Register</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerUserData = {};\n\n  constructor(private _auth: AuthService,\n              private _router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  registerUser() {\n    this._auth.registerUser(this.registerUserData)\n      .subscribe(\n        res => {\n          console.log(res);\n          //localStorage.setItem('token',res.token);\n\n          this._router.navigate(['/login']);\n        },\n        err => console.log(err)\n      );\n  }\n}\n","module.exports = \".btn-group {\\n    width:  100%;\\n    height: inherit;\\n    margin-right: 10%;\\n}\\nbutton {\\n    width:  18%;\\n    height: inherit;\\n    background-color: red;\\n}\\n@media (max-width: 1000px) {\\n    [class*=\\\"btn-\\\"] {\\n        width: 100%;\\n        margin-right: 10px;\\n        margin-top: 2px;\\n        box-sizing: border-box;\\n        padding: 0;\\n    }   \\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"col-xl-10 col-offset-6 centered\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"height: 5vh\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabSaPracenimNovostima\\\"\\n        (click)=\\\"saveClickHistory($event)\\\">Novosti\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabSaProcitanimObavestenjima\\\"\\n        (click)=\\\"saveClickHistory($event)\\\">Procitana obavestenja\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabSaNeprocitanimObavestenjima\\\"\\n        (click)=\\\"saveClickHistory($event)\\\">Neprocitana obavestenja\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabIstorijeDavanja\\\"\\n        (click)=\\\"saveClickHistory($event)\\\">Istorija davanja\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" data-target=\\\"#tabIstorijePrisustvaDogadjajima\\\"\\n        (click)=\\\"saveClickHistory($event)\\\">Moji dogadjaji\\n      </button>\\n    </div>\\n\\n\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"collapse multi-collapse\\\" id=\\\"tabSaPracenimNovostima\\\">\\n          <div class=\\\"card card-body\\\">\\n\\n            <div class=\\\"col-lg-8 mx-auto\\\" *ngFor=\\\"let _novost of _novosti\\\">\\n              <h2 class=\\\"card-title\\\">{{_novost.naslov}}</h2>\\n              <p class=\\\"card-text\\\">{{_novost.sadrzaj}}</p>\\n              <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Procitaj jos</a>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"collapse multi-collapse\\\" id=\\\"tabSaProcitanimObavestenjima\\\">\\n          <div class=\\\"card card-body\\\">\\n\\n            <div class=\\\"col-lg-8 mx-auto\\\" *ngFor=\\\"let _obavestenje of _obavestenja.procitana\\\">\\n              <h2 class=\\\"card-title\\\">{{_obavestenje.naslov}}</h2>\\n              <p class=\\\"card-text\\\">{{_obavestenje.sadrzaj}}</p>\\n              <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Procitaj jos</a>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"collapse multi-collapse\\\" id=\\\"tabSaNeprocitanimObavestenjima\\\">\\n          <div class=\\\"card card-body\\\">\\n\\n            <div class=\\\"col-lg-8 mx-auto\\\" *ngFor=\\\"let _obavestenje of _obavestenja.neprocitana\\\">\\n              <h2 class=\\\"card-title\\\">{{_obavestenje.naslov}}</h2>\\n              <p class=\\\"card-text\\\">{{_obavestenje.sadrzaj}}</p>\\n              <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Procitaj jos</a>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"collapse multi-collapse\\\" id=\\\"tabIstorijeDavanja\\\">\\n          <div class=\\\"card card-body\\\">\\n            <h3 *ngFor=\\\"let _datum of _user.istorijaDavanja\\\">\\n              {{_datum}}\\n            </h3>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"collapse multi-collapse\\\" id=\\\"tabIstorijePrisustvaDogadjajima\\\">\\n          <div class=\\\"card card-body\\\">\\n            istorija prisustvovanja dogadjajima\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../auth.service\";\nimport {PostsManagerService} from \"../posts_manager_service/posts-manager.service\";\n\n@Component({\n  selector: 'app-sadrzaj-korisnika',\n  templateUrl: './sadrzaj-korisnika.component.html',\n  styleUrls: ['./sadrzaj-korisnika.component.css']\n})\nexport class SadrzajKorisnikaComponent implements OnInit {\n\n  private _activeTab;\n\n  private _user;\n\n  private _novosti: [{}];\n  private _obavestenja = {\n    procitana: [{}],\n    neprocitana: [{}]\n  };\n\n  constructor(private _authService: AuthService, private _postsManager: PostsManagerService) {\n\n  }\n\n  ngOnInit() {\n    if (this._authService.loggedIn()) {\n      this._user = JSON.parse(localStorage.getItem(\"loggedUserData\"));\n      this._novosti = JSON.parse(localStorage.getItem(\"_pracene_novosti\"));\n      this._obavestenja = JSON.parse(localStorage.getItem(\"_obavestenja\"));\n    }\n  }\n\n  private saveClickHistory(event) {\n    // ako nije prvi klik klikni na poslednje dugme\n    if (this._activeTab)\n      this._activeTab.click();\n    // zapamti na sta je kliknuto\n    this._activeTab = event.currentTarget;\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerConfigurationService {\n\n  private ipAddress = '192.168.131.135';\n  // 192.168.0.172\n  private portNum = '3030';\n\n  constructor() {\n  }\n\n  public getFullServerAddress() {\n    return 'http://' + this.ipAddress + ':' + this.portNum;\n  }\n\n  public getIpAddress() {\n    return this.ipAddress;\n  }\n\n  public getPortNum() {\n    return this.portNum;\n  }\n\n  public getLoginUrl() {\n    return this.getFullServerAddress() + '/users/login';\n  }\n\n  public getRegisterUrl() {\n    return this.getFullServerAddress() + '/users/register';\n  }\n\n  public getEventsNormalUrl() {\n    return this.getFullServerAddress() + '/products/normal';\n  }\n\n  public getEventsSpecialUrl() {\n    return this.getFullServerAddress() + '/products/special';\n  }\n\n  public getAllPostsUrl() {\n    return this.getFullServerAddress() + '/novosti/all';\n  }\n\n  public getNextPartOfPostsUrl(){\n    return this.getFullServerAddress()+\"/novosti/interval\";\n  }\n\n  public getUserContent_ObavestenjaUrl(){\n    return this.getFullServerAddress()+\"/users/getObavestenja\";\n  }\n\n  public getUserContent_NovostiUrl(){\n    return this.getFullServerAddress()+\"/users/getNovosti\";\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private injector: Injector) { }\n\n  intercept(req, next) {\n    const authService = this.injector.get(AuthService);\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization : `Bearer ${authService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<section id=\\\"about\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-8 mx-auto\\\" *ngFor=\\\"let vest of _vesti\\\">\\n        <h2 class=\\\"card-title\\\">{{vest.naslov}}</h2>\\n        <p class=\\\"card-text\\\">{{vest.sadrzaj}}</p>\\n        <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Procitaj jos</a>\\n      </div>\\n      <button (click)=\\\"dodajPostClick()\\\">Dodaj post</button>\\n    </div>\\n  </div>\\n</section>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PostsManagerService} from \"../posts_manager_service/posts-manager.service\";\n\n@Component({\n  selector: 'app-vest',\n  templateUrl: './vest.component.html',\n  styleUrls: ['./vest.component.css']\n})\nexport class VestComponent implements OnInit {\n\n  private _vesti = [];\n\n  private _lastPostIndex;\n\n  constructor(private _postsManager: PostsManagerService) {\n\n    console.log(\"Component consturctor....\");\n    this._lastPostIndex = this._postsManager.getLastPostIndex();\n    console.log(\"_lastPostIndex set to : \" + this._lastPostIndex);\n  }\n\n  ngOnInit() {\n\n    let _this = this;\n\n    let savedPosts = localStorage.getItem(\"currentPosts\");\n    console.log(\"INITIAL STORAGE STATE: \\n\" + savedPosts);\n    if (savedPosts != null) {\n\n      console.log(\"Loading posts from storage\");\n\n      this._vesti = JSON.parse(savedPosts);\n\n    } else {\n\n      console.log(\"Sending request for posts\");\n\n      this.getNextPosts(2);\n\n    }\n  }\n\n  public dodajPostClick() {\n    this.getNextPosts(2)\n  }\n\n  public getNextPosts(count: number) {\n\n    let _this = this;\n\n    // get posts\n    this._postsManager.getNextPart(this._lastPostIndex, parseInt(this._lastPostIndex) + count).subscribe(\n      function (res) {\n        console.log(\"Receiving from: \" + _this._lastPostIndex + \" to: \" + (parseInt(_this._lastPostIndex) + count));\n\n        _this._vesti = _this._vesti.concat(res);\n        _this._lastPostIndex += count;\n\n        console.log(\"Received: \"+String(res));\n\n        _this._postsManager.saveLastPostIndex(_this._lastPostIndex);\n        _this._postsManager.savePostsToLocalStorage(res);\n\n      },\n      function (err) {\n        console.log(err);\n      },\n      function () {\n        console.log(\"...FETCH COMPLETED...\");\n      }\n    );\n  }\n\n\n}\n","module.exports = \"#sidebar {\\n    margin-left:0px; \\n    padding: 0px;\\n    float: left;\\n    width: 100%;\\n    height: 100%;\\n    background-color: lightgray;\\n}\\n.nav-item {\\n    padding: 0px;\\n    \\n}\\na {\\n  cursor: default;\\n}\\n#wrapper {\\n    padding-left: 173px;\\n    transition: all 0.4s ease 0s;\\n    padding-right: 0px;\\n    margin-right: 0px;\\n    width: inherit - 173px;\\n  }\\n#sidebar-wrapper {\\n    margin-left: -172.5px;\\n    left: 172.5px;\\n    width: 172.5px;\\n    background: #CCC;\\n    position: fixed;\\n    height: 100%;\\n    overflow-y: auto;\\n    z-index: 1000;\\n    transition: all 0.4s ease 0s;\\n  }\\n#page-content-wrapper {\\n    width: 100%;\\n  }\\n@media (max-width:400) {\\n  \\n      #wrapper {\\n        padding-left: 0;\\n      }\\n  \\n      #sidebar-wrapper {\\n        left: 0;\\n      }\\n  \\n      #wrapper.active {\\n        position: relative;\\n        left: 250px;\\n      }\\n  \\n      #wrapper.active #sidebar-wrapper {\\n        left: 250px;\\n        width: 250px;\\n        transition: all 0.4s ease 0s;\\n      }\\n  \\n  }\\n\\n\"","module.exports = \"<div id=\\\"wrapper\\\">\\n    <div id=\\\"sidebar-wrapper\\\">\\n      <div class = \\\"col-xl-4 col-lg-8 sidebar\\\" id=\\\"sidebar\\\" role=\\\"navigation\\\">\\n        <ul class=\\\"nav nav-tabs|pills\\\" id=\\\"navId\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">ID</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">Drzava</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">Grad</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">Adresa</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">Novosti</a>  <!-- treba da se otvore informacije kad se pritisne -->\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">Dogadjaji</a>  <!-- treba da se otvore informacije kad se pritisne -->\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">Informacije</a> <!-- treba da se otvore informacije kad se pritisne -->\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  <div id=\\\"page-content-wrapper\\\">\\n      <div class=\\\"page-content\\\">\\n          <div class=\\\"container\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                    <p>qwpdqwpdk</p>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-zavod',\n  templateUrl: './zavod.component.html',\n  styleUrls: ['./zavod.component.css']\n})\nexport class ZavodComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/event.service.ts","webpack:///./src/app/korisnik/korisnik.component.css","webpack:///./src/app/korisnik/korisnik.component.html","webpack:///./src/app/korisnik/korisnik.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/normal-e/normal-e.component.css","webpack:///./src/app/normal-e/normal-e.component.html","webpack:///./src/app/normal-e/normal-e.component.ts","webpack:///./src/app/posts_manager_service/fake-posts-manager.service.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/server-configuration.service.ts","webpack:///./src/app/special-e/special-e.component.css","webpack:///./src/app/special-e/special-e.component.html","webpack:///./src/app/special-e/special-e.component.ts","webpack:///./src/app/token-interceptor.service.ts","webpack:///./src/app/vest/vest.component.css","webpack:///./src/app/vest/vest.component.html","webpack:///./src/app/vest/vest.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SpecialEComponent} from './special-e/special-e.component';\nimport {NormalEComponent} from './normal-e/normal-e.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {AuthGuard} from './auth.guard';\nimport {VestComponent} from \"./vest/vest.component\";\n\nconst routes: Routes = [\n  {\n\n    path: '',\n    redirectTo: '/normal',\n    pathMatch:\"full\"\n  },\n  {\n    path: 'normal',\n    component: NormalEComponent\n  },\n  {\n    path: 'special',\n    component: SpecialEComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path:'show_posts',\n    component:VestComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\" style=\\\"margin-bottom: 0px\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BloodMaster2000</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\"><a href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a></li>\\n        <li class=\\\"active\\\"><a href=\\\"#\\\">Vesti <span class=\\\"sr-only\\\">(current)</span></a></li>\\n      </ul>\\n      <form class=\\\"navbar-form navbar-left\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Trazi</button>\\n      </form>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</a></li>\\n        <li><a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\" >Register</a></li>\\n        <li><a style= \\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" class=\\\"nav-link\\\" (click)=\\\"_authService.logoutUser()\\\"><span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a></li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n<div>\\n  <router-outlet></router-outlet>\\n  <app-korisnik></app-korisnik>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from './auth.service';\nimport {ServerConfigurationService} from './server-configuration.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private ROOT_URL = '';\n\n  title = 'app';\n\n  constructor(\n    private http: HttpClient,\n    private _authService: AuthService,\n    private _serverConfig: ServerConfigurationService\n  ) {\n    this.ROOT_URL = this._serverConfig.getFullServerAddress();\n  }\n\n  ngOnInit(): void {\n    document.addEventListener(\n      'backbutton',\n      function () {\n        alert('el si morao ');\n      },\n      false\n    );\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { NormalEComponent } from './normal-e/normal-e.component';\nimport { SpecialEComponent } from './special-e/special-e.component';\nimport { AuthService } from './auth.service';\nimport { EventService } from './event.service';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { VestComponent } from './vest/vest.component';\nimport { KorisnikComponent } from './korisnik/korisnik.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    NormalEComponent,\n    SpecialEComponent,\n    VestComponent,\n    KorisnikComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [AuthService, AuthGuard, EventService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n//import { Observable } from 'rxjs';\n\n// ovi iznad su bili isti samo u jednom bila prazna linija ispod auth service\n\n@Injectable(// {\n  // providedIn: 'root'\n// }\n)\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _authService: AuthService, private _router: Router) {\n\n  }\n  canActivate(): boolean {\n    if (this._authService.loggedIn()) {\n      return true;\n    } else {\n      this._router.navigate(['/login']);\n      return false;\n    }\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {ServerConfigurationService} from './server-configuration.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _registerUrl = '';\n  private _loginUrl = '';\n\n  constructor(private http: HttpClient, private _router: Router, private _serverConfig: ServerConfigurationService) {\n    this._registerUrl = this._serverConfig.getRegisterUrl();\n    this._loginUrl = this._serverConfig.getLoginUrl();\n  }\n\n  registerUser(user) {\n    return this.http.post<any>(this._registerUrl, user);\n  }\n\n  loginUser(user) {\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token'); // dva puta negira\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  logoutUser() {\n    localStorage.removeItem('token');\n    this._router.navigate(['/normal']);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ServerConfigurationService} from './server-configuration.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EventService {\n\n  private _eventsNormalUrl = '';\n  private _eventsSpecialUrl = '';\n\n  constructor(private http: HttpClient, private _serverConfig: ServerConfigurationService) {\n    this._eventsNormalUrl = this._serverConfig.getEventsNormalUrl();\n    this._eventsSpecialUrl = this._serverConfig.getEventsSpecialUrl();\n  }\n\n  getNormalEvents(){\n    return this.http.get<any>(this._eventsNormalUrl);\n  }\n\n  getSpecialEvents() {\n    return this.http.get<any>(this._eventsSpecialUrl);\n  }\n\n  public getEventsNormalUrl() {\n    return this._eventsNormalUrl;\n  }\n\n}\n","module.exports = \"/* The sidebar menu */\\n\\n/* On smaller screens, where height is less than 450px, change the style of the sidebar (less padding and a smaller font size) */\\n\\n@media screen and (max-height: 450px) {\\n    .sidenav {padding-top: 15px;}\\n    .sidenav a {font-size: 18px;}\\n}\\n\\nul {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n    background-color: #f1f1f1;\\n}\\n\\nli a {\\n    display: block;\\n    color: #000;\\n    padding: 8px 16px;\\n    text-decoration: none;\\n}\\n\\n/* Change the link color on hover */\\n\\nli a:hover {\\n    background-color: #555;\\n    color: white;\\n}\"","module.exports = \"<!-- \\n<div id=\\\"mySidenav\\\" class=\\\"sidenav\\\">\\n    <a href=\\\"#\\\">About</a>\\n    <a href=\\\"#\\\">Services</a>\\n    <a href=\\\"#\\\">Clients</a>\\n    <a href=\\\"#\\\">Contact</a>\\n</div> -->\\n\\n<!-- Add all page content inside this div if you want the side nav to push page content to the right (not used if you only want the sidenav to sit on top of the page -->\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row row-offcanvas row-offcanvas-left\\\">\\n      <div class=\\\"col-xs-6 col-sm-3 sidebar-offcanvas\\\" id=\\\"sidebar\\\" role=\\\"navigation\\\" style=\\\"margin: 0px; padding: 0px;\\\">\\n          <div class=\\\"sidebar-nav\\\">\\n              <ul class=\\\"nav\\\" style=\\\"background-color: lightgray; height: 100vh; width: 172.25px\\\">\\n                  <li class=\\\"active\\\"><a href=\\\"#\\\">Link</a></li>\\n                  <li><a href=\\\"#\\\">Link</a></li>\\n                  <li><a href=\\\"#\\\">Link</a></li>\\n                  <li class=\\\"nav-divider\\\"></li>\\n                  <li><a href=\\\"#\\\">Link</a></li>\\n                  <li><a href=\\\"#\\\">Link</a></li>\\n                  <li><a href=\\\"#\\\">Link</a></li>\\n                  <li class=\\\"nav-divider\\\"></li>\\n                  <li><a href=\\\"#\\\">Link</a></li>\\n                  <li><a href=\\\"#\\\">Link</a></li>\\n              </ul>\\n          </div>\\n          <!--/.well -->\\n      </div>\\n      <!--/span-->\\n\\n      <div>\\n          <ul>\\n              <li><h2>Ime</h2></li>\\n              <li><h2>Prezime</h2></li>\\n          </ul>\\n      </div>\\n  </div>\\n  <!--/row-->\\n\\n  \\n\\n  <hr>\\n</div>\\n<!--/.container-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-korisnik',\n  templateUrl: './korisnik.component.html',\n  styleUrls: ['./korisnik.component.css']\n})\nexport class KorisnikComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row pt-5\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card rounded-0\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Login</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"form-froup\\\">\\n            <label for=\\\"\\\">Email</label>\\n            <input [(ngModel)]=\\\"loginUserData.email\\\" name=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label   for=\\\"\\\">Password</label>\\n            <input [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control rounded-0\\\" required>\\n\\n          </div>\\n          <button (click)=\\\"loginUser()\\\" type=\\\"button\\\" class=\\\"btn btn-success float-right\\\">Login</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  loginUserData = {};\n\n  constructor(private _auth: AuthService,\n              private _router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  loginUser() {\n    this._auth.loginUser(this.loginUserData).subscribe(\n      res => {\n        console.log(res);\n        localStorage.setItem('token', res.token);\n        this._router.navigate(['/special']);\n      },\n      err => console.log(err)\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <!-- Brand and toggle get grouped for better mobile display -->\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BloodMaster2000</a>\\n      </div>\\n  \\n      <!-- Collect the nav links, forms, and other content for toggling -->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li class=\\\"active\\\"><a href=\\\"#\\\">Link <span class=\\\"sr-only\\\">(current)</span></a></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n        </ul>\\n        <form class=\\\"navbar-form navbar-left\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n        </form>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li><a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a></li>\\n          <li><a class=\\\"nav-link\\\" *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\" >Register</a></li>\\n          <li><a style= \\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" class=\\\"nav-link\\\" (click)=\\\"_authService.logoutUser()\\\">Logout</a></li>\\n        </ul>\\n      </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row mt-5\\\">\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let event of events\\\">\\n    <div class=\\\"card text-center\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{event.name}}</h5>\\n        <p class=\\\"card-text\\\">{{event.price}}</p>\\n        <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Buy Tickets</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {EventService} from '../event.service';\n\n@Component({\n  selector: 'app-normal-e',\n  templateUrl: './normal-e.component.html',\n  styleUrls: ['./normal-e.component.css']\n})\nexport class NormalEComponent implements OnInit {\n\n  events = [];\n\n  constructor(private _eventService: EventService) {\n  }\n\n  ngOnInit() {\n\n    console.log(\"SALJE SE ZAHTEV \" + this._eventService.getEventsNormalUrl());\n\n    let _this = this;\n\n    this._eventService.getNormalEvents().subscribe(\n      function (res) {\n        _this.events = res;\n      }, function (err) {\n        console.log(\"\\n\\n\\n\\n\\n GRESKA:      \" + err + \"\\n\\n\\n\\n\\n\\n\");\n      }\n    );\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FakePostsManagerService {\n\n  private _postsList = [\n    {\n      idZavoda: \"2\",\n      naslov: \"Prvi post\",\n      sadrzaj: \"E jbg sad, ovo je neki sadrzj\",\n      datum: \"ima\",\n      ukratko: \"bas kratko\"\n    },\n    {\n      idZavoda: \"1\",\n      naslov: \"neki drugi post\",\n      sadrzaj: \"ovo je neki lep sadrzj\",\n      datum: \"nema\",\n      ukratko: \"bas dosta kratko\"\n    },\n    {\n      idZavoda: \"1\",\n      naslov: \"neki drugi post\",\n      sadrzaj: \"ovo je neki lep sadrzj\",\n      datum: \"nema\",\n      ukratko: \"bas dosta kratko\"\n    },\n    {\n      idZavoda: \"1\",\n      naslov: \"neki drugi post\",\n      sadrzaj: \"ovo je neki lep sadrzj\",\n      datum: \"nema\",\n      ukratko: \"bas dosta kratko\"\n    },\n    {\n      idZavoda: \"1\",\n      naslov: \"neki drugi post\",\n      sadrzaj: \"ovo je neki lep sadrzj\",\n      datum: \"nema\",\n      ukratko: \"bas dosta kratko\"\n    },\n    {\n      idZavoda: \"1\",\n      naslov: \"neki drugi post\",\n      sadrzaj: \"ovo je neki lep sadrzj\",\n      datum: \"nema\",\n      ukratko: \"bas dosta kratko\"\n    },\n    {\n      idZavoda: \"1\",\n      naslov: \"neki drugi post\",\n      sadrzaj: \"ovo je neki lep sadrzj\",\n      datum: \"nema\",\n      ukratko: \"bas dosta kratko\"\n    }\n  ];\n\n  constructor() {\n  }\n\n  public getAllPosts():any[] {\n    return this._postsList;\n  }\n\n  public getNextPart(_lastPostIndex: number): any[] {\n    return this._postsList.slice(_lastPostIndex, _lastPostIndex + 2);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row pt-5\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card rounded-0\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Register</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"form-froup\\\">\\n            <label for=\\\"\\\">Email</label>\\n            <input [(ngModel)]=\\\"registerUserData.email\\\" name=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label   for=\\\"\\\">Password</label>\\n            <input [(ngModel)]=\\\"registerUserData.password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control rounded-0\\\" required>\\n\\n          </div>\\n          <button (click)=\\\"registerUser()\\\" type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\">Register</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerUserData = {};\n\n  constructor(private _auth: AuthService,\n              private _router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  registerUser() {\n    this._auth.registerUser(this.registerUserData)\n      .subscribe(\n        res => {\n          console.log(res);\n          // localStorage.setItem('token',res.token)\n          this._router.navigate(['/login']);\n        },\n        err => console.log(err)\n      );\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerConfigurationService {\n\n  private ipAddress = \"192.168.0.172\";\n  // 192.168.0.172\n  private portNum = \"3030\";\n\n  constructor() {\n  }\n\n  public getFullServerAddress() {\n    return \"http://\" + this.ipAddress + \":\" + this.portNum;\n  }\n\n  public getIpAddress() {\n    return this.ipAddress;\n  }\n\n  public getPortNum() {\n    return this.portNum;\n  }\n\n  public getLoginUrl() {\n    return this.getFullServerAddress() + \"/users/login\";\n  }\n\n  public getRegisterUrl() {\n    return this.getFullServerAddress() + \"/users/register\";\n  }\n\n  public getEventsNormalUrl() {\n    return this.getFullServerAddress() + \"/products/normal\";\n  }\n\n  public getEventsSpecialUrl() {\n    return this.getFullServerAddress() + \"/products/special\";\n  }\n\n  public getAllPostsUrl(){\n    return this.getFullServerAddress()+\"/novosti/all\";\n  }\n\n  public getNextPartOfPostsUrl(){\n    // podesi novu rutu na serveru\n    return this.getFullServerAddress()+\"/novosti/next\";\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row mt-5\\\">\\n  <div class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let event of specialEvents\\\">\\n    <div class=\\\"card text-center\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{event.name}}</h5>\\n        <p class=\\\"card-text\\\">{{event.price}}</p>\\n        <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Buy Tickets</a>\\n      </div>\\n     \\n    </div>\\n  </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {EventService} from '../event.service';\n\n@Component({\n  selector: 'app-special-e',\n  templateUrl: './special-e.component.html',\n  styleUrls: ['./special-e.component.css']\n})\nexport class SpecialEComponent implements OnInit {\n\n  specialEvents = [];\n\n  constructor(private _eventService: EventService) {\n  }\n\n  ngOnInit() {\n    this._eventService.getSpecialEvents().subscribe(\n      res => this.specialEvents = res,\n      err => console.log(err)\n    );\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private injector: Injector) { }\n\n  intercept(req, next) {\n    const authService = this.injector.get(AuthService);\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization : `Bearer ${authService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<section id=\\\"about\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-8 mx-auto\\\" *ngFor=\\\"let vest of _vesti\\\">\\n        <h2 class=\\\"card-title\\\">{{vest.naslov}}</h2>\\n        <p class=\\\"card-text\\\">{{vest.ukratko}}</p>\\n        <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Procitaj jos</a>\\n      </div>\\n      <button (click)=\\\"dodajPostClick()\\\">Dodaj post</button>\\n    </div>\\n  </div>\\n</section>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PostsManagerService} from \"../posts_manager_service/posts-manager.service\";\nimport {FakePostsManagerService} from \"../posts_manager_service/fake-posts-manager.service\";\n\n@Component({\n  selector: 'app-vest',\n  templateUrl: './vest.component.html',\n  styleUrls: ['./vest.component.css']\n})\nexport class VestComponent implements OnInit {\n\n  private _vesti = [];\n\n  private _lastPostIndex: number;\n\n  constructor(private _postsManager: FakePostsManagerService) {\n    this._lastPostIndex = 0;\n  }\n\n  ngOnInit() {\n\n    let _this = this;\n\n    this._vesti = this._vesti.concat(this._postsManager.getNextPart(this._lastPostIndex));\n\n    console.log(this._vesti);\n\n    // this._postsManager.getNextPart(this._lastPostIndex).subscribe(\n    //   function (res) {\n    //     _this._vesti = res;\n    //   }\n    //   , function (err) {\n    //     console.log(err);\n    //   });\n\n  }\n\n  public dodajPostClick() {\n\n    let tempArray = this._postsManager.getNextPart(this._lastPostIndex);\n    this._lastPostIndex += tempArray.length;\n    this._vesti = this._vesti.concat(tempArray);\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}